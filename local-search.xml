<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vue基础+项目</title>
    <link href="/2021/06/08/Vue%E5%9F%BA%E7%A1%80-%E9%A1%B9%E7%9B%AE/"/>
    <url>/2021/06/08/Vue%E5%9F%BA%E7%A1%80-%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="第一部分，Vue基础"><a href="#第一部分，Vue基础" class="headerlink" title="第一部分，Vue基础"></a>第一部分，Vue基础</h2><h4 id="1-路由"><a href="#1-路由" class="headerlink" title="1. 路由"></a>1. 路由</h4><h4 id="2-vue组件–组件中的data和methods"><a href="#2-vue组件–组件中的data和methods" class="headerlink" title="2. vue组件–组件中的data和methods"></a>2. vue组件–组件中的data和methods</h4><p>自定义组件中，数据放在data<strong>函数</strong>的==返回值==中。原因：避免数据混乱。复用多个组件时，多次调用data函数，数据一一对应。</p><h4 id="3-组件切换"><a href="#3-组件切换" class="headerlink" title="3. 组件切换"></a>3. 组件切换</h4><p>通过<code>v-if</code>和<code>v-else</code>切换，专业做法是使用</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>git使用入门</title>
    <link href="/2021/05/31/git%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <url>/2021/05/31/git%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<p>Git使用步骤</p><ol><li><p>初始配置（名称、邮箱、密钥）</p></li><li><p>开发流程</p><ol><li>本地建立分支</li><li></li><li>推送到远程前，先在本地验证项目可以跑起来。</li></ol></li><li><p>合并步骤：<br> 1、进入要合并的分支（如开发分支合并到master，则进入master目录）<br> git checkout master<br> git pull</p><p> 2、查看所有分支是否都pull下来了<br> git branch -a</p><p> 3、使用merge合并开发分支<br> git merge 分支名</p><p> 4、查看合并之后的状态<br> git status</p><p> 5、有冲突的话，通过IDE解决冲突；</p><p> 6、解决冲突之后，将冲突文件提交暂存区<br> git add 冲突文件</p><p> 7、提交merge之后的结果<br> git commit</p><p> 如果不是使用git commit -m “备注” ，那么git会自动将合并的结果作为备注，提交本地仓库；</p><p> 8、本地仓库代码提交远程仓库<br> git push</p><p> git将分支合并到分支，将master合并到分支的操作步骤是一样的。</p><p> 也可以用git checrry-pick commitid合并</p></li></ol><h2 id="GIT分支管理策略"><a href="#GIT分支管理策略" class="headerlink" title="GIT分支管理策略"></a>GIT分支管理策略</h2><h4 id="1-主分支Master：自动建立，对外发布版本"><a href="#1-主分支Master：自动建立，对外发布版本" class="headerlink" title="1. 主分支Master：自动建立，对外发布版本"></a>1. 主分支Master：自动建立，对外发布版本</h4><h4 id="2-开发分支Develop："><a href="#2-开发分支Develop：" class="headerlink" title="2. 开发分支Develop："></a>2. 开发分支Develop：</h4><ol><li><p>创建dev分支进行开发：git checkout -b develop master</p></li><li><p>切换到master分支：git checkout master</p></li><li><p>开发完成后，在master分支上对dev分支进行合并：git merge –no-ff develop</p><p>–no-ff：正常合并外，在Master分支上生成一个新节点。保证了版本的清晰演进。</p></li></ol><h4 id="3-临时性分支"><a href="#3-临时性分支" class="headerlink" title="3. 临时性分支"></a>3. 临时性分支</h4><ol><li><h6 id="feature分支：开发新特性。从dev分支中拷贝出来的，开发完成后合并到dev分支中。命名形式为：teature"><a href="#feature分支：开发新特性。从dev分支中拷贝出来的，开发完成后合并到dev分支中。命名形式为：teature" class="headerlink" title="feature分支：开发新特性。从dev分支中拷贝出来的，开发完成后合并到dev分支中。命名形式为：teature-"></a>feature分支：开发新特性。从dev分支中拷贝出来的，开发完成后合并到dev分支中。命名形式为：teature-</h6><ol><li><p>创建新分支：git checkout -b feature-x develop</p></li><li><p>开发完成后，合并到dev分支：   </p><blockquote><p>git checkout develop</p></blockquote><blockquote><p>git merge –no-ff feature-x</p></blockquote><ol start="3"><li>删除feature分支</li></ol><blockquote><p>git branch -d feature-x</p></blockquote></li></ol></li></ol><ol start="2"><li><p>release分支：预发布，供测试使用。从dev分支拷贝而来，开发完成后合并到master和dev中。命名：release-</p><ol><li><p>创建新分支：    </p><blockquote><p>git checkout -b release-1.2 develop</p></blockquote><ol start="2"><li>测试确认没有问题后，合并到master分支：</li></ol><blockquote><p>git checkout master</p></blockquote><blockquote><p>git merge –no-ff release-1.2</p></blockquote><blockquote><p>// 对合并生成的新节点，生成一个tag标签</p><p>git tag -a 1.2</p></blockquote><ol start="3"><li>再合并到dev分支中</li></ol><blockquote><p>git checkout develop</p></blockquote><blockquote><p>git merge –no-ff release-1.2</p></blockquote><ol start="4"><li>最后，删除预发布分支</li></ol><blockquote><p>git branch -d release-1.2</p></blockquote></li></ol></li></ol><ol start="3"><li><p>fixbug分支：修复bug。从master分支拷贝而来，而后合并到master和dev分支。命名：fixbug-</p><ol><li><p>创建分支</p><blockquote><p>git checkout -b fixbug-0.1 master</p></blockquote><ol start="2"><li>修补结束后，合并到master分支</li></ol><blockquote><p>git checkout master</p></blockquote><blockquote><p>git merge –no-ff fixbug-0.1</p></blockquote><blockquote><p>git tag -a 0.1.1</p></blockquote><ol start="3"><li>再合并到dev中</li></ol><blockquote><p>git checkout develop</p></blockquote><blockquote><p>git merge –no-ff fixbug-0.1</p></blockquote><ol start="4"><li>最后，删除fixbug分支</li></ol><blockquote><p>git branch -d fixbug-0.1</p></blockquote></li></ol></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue Router基础</title>
    <link href="/2021/05/29/Vue-Router%E5%9F%BA%E7%A1%80/"/>
    <url>/2021/05/29/Vue-Router%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ol><li>安装</li><li>起步</li><li>动态路由</li><li>嵌套路由</li><li>编程式的导航</li><li>命名路由<ol><li>两种链接方式：<code>&lt;router-link :to=&quot;&#123;name, params&#125;&quot;&gt;</code> 和 <code>router.push(&#123;name, params&#125;)</code></li><li>属性：<ol><li>path：路由路径</li><li>name：给这条路由取个名字</li><li>component</li><li>meta：title菜单标题、icon图标</li></ol></li></ol></li><li>命名视图</li><li>重定向和别名</li><li>路由组件传参</li><li>HTML5 History模式</li></ol><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><ol><li>导航首位</li><li>路由元信息</li><li>过渡动效</li><li>数据获取</li><li>滚动行为</li><li>路由懒加载</li><li>导航故障</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Element UI使用入门</title>
    <link href="/2021/05/29/Element-UI%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <url>/2021/05/29/Element-UI%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<ol><li>有React和Angular其余两个版本</li><li>有两种安装方式，npm和CDN。孰优孰劣，具体问题具体分析。</li><li>国际化，即配置不同语言。element提供</li><li>自定义主题，主题可自定义</li><li>内置过渡动画，淡入淡出、zoom缩放、collapse展开折叠</li></ol><p>组件</p><ol><li><p>基础</p><ol><li><p> 布局：基础布局、分栏布局、分栏偏移、混合布局、响应式布局（参考了bootstrap的五个相应尺寸）、对齐方式（左对齐、右对齐、居中对齐、两端对齐，分散对齐）</p></li><li><p>布局容器：在布局的基础上优化的整体布局</p></li><li><p>颜色：主色、辅助色、中性色（灰黑）。三种颜色颜色分明，更容易接收信息。</p></li><li><p>typography字体：提供了字体</p></li><li><p>border边框：边框实虚线、倒角（大小圆形）、投影</p></li><li><p>icon图标：提供了许多icon图标</p></li><li><p>Button按钮：</p><ol><li>按钮颜色（红危险，绿成功，蓝主色，黄警告，灰信息，和空白）</li><li>状态（禁用、加载）</li><li>形状（圆角、文字按钮、图标）</li></ol></li><li><p>Link文字链接：</p><ol><li>颜色</li><li>状态（没有加载）</li><li>形状（下划线、图标）</li></ol></li><li><p>只要是可以点击的（如按钮，链接），都有颜色、状态、形状。只不过不同的点击形式略有区别</p></li></ol></li></ol><ol start="2"><li><p>form表单</p><ol><li>Radio单选框：<ol><li>radio收音机，因为美国老式收音机的按钮只能有一个被点击，和单选十分相似，所以用radio表示单选。</li><li>radio选项不宜过多（两三个为宜），若三个以上，则使用select选择器</li><li>颜色（单选不需要颜色区分）、状态（禁用）、形状（按钮形式、带边框）</li></ol></li><li>Input输入框：<ol><li>状态：可禁用、可清空、可显隐（密码）、长度限制</li><li>形状：带icon图标、尺寸</li><li>类型：文本/密码、文本域（可自适应）、复合型（前置/后置元素，元素可以是文本/select选择/按钮）</li><li>高级：带输入建议，全部触发、输入后匹配触发、自定义（输入建议的）显示、远程搜索</li></ol></li><li>InputNumber计数器：<ol><li>状态：可禁用</li><li>形状：加减按钮的分布、尺寸</li><li>类型：自定义步数（包括小数）</li></ol></li><li>Select选择器<ol><li>状态：选择器/选项禁用，</li><li>形状：</li><li>类型：可删除、多选、自定义选项、选项分组、本地搜索、远程搜索、创建选项</li></ol></li><li>Cascader级联选择器：<ol><li>状态：禁用选项、点击触发、hover触发、仅显示最后一级、动态加载选项</li><li>形状：可清空</li><li>类型：可多选（全选/折叠）、选择任意一级选项、可搜索</li></ol></li><li>Switch开关：可做开关、二选一，可搭配文字描述。禁用状态。</li><li>Slider滑块：<ol><li>状态：初始值的位置、是否展示数字、禁用、展示部分数值</li><li>形状：默认横向、可以竖向。可以间断（显/隐）</li><li>类型：选择范围（可做范围选择器）</li></ol></li><li>TimePicker时间选择器：可选时间，时间点，时间点范围</li><li>DatePicker日期选择器：选择日期、周、月、年。多个日期，日期范围。还可以带快捷选择。带有日期和时间点（更精确）带范围。起始与结束时刻。</li><li>Upload上传：上传种类：手动/拖拽、文件/头像/图片、文件缩略/列表、文件大小控制。</li><li>Rate评分：<ol><li>三个方面（颜色、文字、icon图标）五星好评！（可在不同等级上给不同颜色）、辅助文字（对应每一颗星星）、不同评价对应不同图标。</li><li>状态：只读/读写</li></ol></li><li>ColorPicker颜色选择器：<ol><li>颜色：可设默认值，没有默认值默认为透明色。可设透明度。</li><li>形状：尺寸</li></ol></li><li>Transfer穿梭框：左右列表内容的更换，优化“可以对列表内容实现筛选（搜索功能筛选）”。样式可以自定义（按钮大小颜色、选项状态–禁用）。</li><li>Form表单：单选、多选、选择器、输入框、按钮集成。<ol><li>注意表form单中如果有input输入框时，如果在输入框中按下回车键，则自动提交表单。所以，阻止则用prevent修饰符。</li><li>若form表单受位置限制没法竖直写下来，则使用横排写。</li><li>input前面的描述问题排版可以为左对齐，有对齐，顶部对齐。</li><li>表单验证，可以自定义。（数字）</li><li>可以增删数据项。</li></ol></li></ol></li><li><p>Data数据</p><ol><li><p>Table表格：:data被遍历的数组、</p><ol><li><p>基础表格：label标题、prop数组项、width宽度</p></li><li><p>带斑马纹表格、表头嵌套、排序、筛选、组合其他组件使用、展开行、树形数据与懒加载</p></li><li><table><thead><tr><th>table</th><th>table column</th></tr></thead><tbody><tr><td>:data遍历数组</td><td>prop 数组项中的值</td></tr><tr><td>tripe条纹</td><td>label 标签名</td></tr><tr><td>hight：固定表头</td><td>width 高度</td></tr><tr><td></td><td>fixed 列项固定（若多项离散字段，则字段抽离、排队，在最前面形成新的“吸顶”组合）</td></tr><tr><td>highlight-current-row <strong>单选</strong>高亮 ，点击当前行，即实现当前行的高亮显示。（细分点击事件）</td><td>show-overflow-tooltip 单行显示过多则显示部分（用省略号表示剩余部分），完整信息则通过“工具建议”提示（类似于img标签中的长时间hover则显提示的属性）</td></tr><tr><td></td><td>type=”selection” <strong>多选</strong>，在字段列中，添加一列，然后添加属性。</td></tr></tbody></table></li></ol></li></ol></li><li><p>Notice注意</p></li><li><p>Navigation导航</p></li><li><p>others其他</p><ol><li>Dialog对话框：基本使用、自定义、嵌套、居中布局、</li></ol></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue</title>
    <link href="/2021/05/28/Vue/"/>
    <url>/2021/05/28/Vue/</url>
    
    <content type="html"><![CDATA[<h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><ol><li>v-on事件监听(@)、v-bind数据绑定(:)</li><li>父子组件数据传递</li><li>父子组件方法传递</li><li>事件：用<code>v-on：</code>监听，<ol><li>有如下事件：click点击、hover盘旋、focus聚焦</li></ol></li><li>事件修饰符：对事件进行细化区分<ol><li>.native监听原生事件</li><li>.sync事件修饰符：在父子组件传值中，子组件向父组件中传值，简化的写法。</li><li><code>a=&quot;b&quot; :update:a=&quot;b=$event&quot;</code> 简写为 <code>a.sync=&quot;b&quot;</code></li><li>.sync事件修饰符中，和v-bind使用时，属性值可以是data中的属性值、对象（不能为语法表达式、不能是字面量，因为直接写在组件属性中，解析过于复杂）。对象中的每一个属性值都会被绑定</li></ol></li><li>其他<ol><li>同步和异步：同步等待，异步不等待。</li><li></li></ol></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Want Weapp UI框架使用</title>
    <link href="/2021/05/28/Want-Weapp-UI%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/05/28/Want-Weapp-UI%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="一、基础组件"><a href="#一、基础组件" class="headerlink" title="一、基础组件"></a>一、基础组件</h2><ol><li>Button按钮</li><li>Cell表格</li><li>Icon图标</li><li>Image图片</li><li>Layout布局</li><li>Popup弹出层</li><li>Transition动画</li></ol><h2 id="二、表单组件"><a href="#二、表单组件" class="headerlink" title="二、表单组件"></a>二、表单组件</h2><ol><li>Calendar日历</li><li>Checkbox复选框</li><li>DatetimePicker时间选择（与日历相比，精确到时间）</li><li>field输入框</li></ol><h2 id="三、反馈组件"><a href="#三、反馈组件" class="headerlink" title="三、反馈组件"></a>三、反馈组件</h2><h2 id="四、展示组件"><a href="#四、展示组件" class="headerlink" title="四、展示组件"></a>四、展示组件</h2><h2 id="五、导航组件"><a href="#五、导航组件" class="headerlink" title="五、导航组件"></a>五、导航组件</h2><h2 id="六、业务组件"><a href="#六、业务组件" class="headerlink" title="六、业务组件"></a>六、业务组件</h2><h2 id="七、其他"><a href="#七、其他" class="headerlink" title="七、其他"></a>七、其他</h2>]]></content>
    
    
    
    <tags>
      
      <tag>前端UI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo使用笔记</title>
    <link href="/2021/03/07/hexo%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/03/07/hexo%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="1-文件创建"><a href="#1-文件创建" class="headerlink" title="1. 文件创建"></a>1. 文件创建</h2><blockquote><p>$ hexo new [layout] “title”</p></blockquote><p>layout：默认、page、draft</p><h2 id="2-文件提交"><a href="#2-文件提交" class="headerlink" title="2. 文件提交"></a>2. 文件提交</h2><p>提交”三部曲“</p><ol><li><p>清除缓存</p><blockquote><p>$ hexo clean</p></blockquote></li><li><p>生成静态文件</p><blockquote><p>$ hexo g</p></blockquote></li><li><p>部署到服务器</p><blockquote><p>$ hexo d</p></blockquote></li></ol><p>最后，由于未知问题，需要输入git权限密码</p><h2 id="3-标题配置"><a href="#3-标题配置" class="headerlink" title="3. 标题配置"></a>3. 标题配置</h2><blockquote><p>标题、日期、分类、标签。（注意，冒号后有一个空格）</p><p>title:<br>date:<br>categories: </p><ul><li>[web技术, 技术]</li><li>[生活感悟]</li><li>[哲学]<br>  tags: </li><li>web</li><li>测试</li><li>技术</li><li>markdown</li></ul></blockquote><h2 id="4-草稿"><a href="#4-草稿" class="headerlink" title="4. 草稿"></a>4. 草稿</h2><h4 id="1-生成草稿"><a href="#1-生成草稿" class="headerlink" title="1. 生成草稿"></a>1. 生成草稿</h4><blockquote><p>$ hexo new draft “草稿文件名”</p></blockquote><h4 id="2-草稿“出版化”"><a href="#2-草稿“出版化”" class="headerlink" title="2. 草稿“出版化”"></a>2. 草稿“出版化”</h4><blockquote><p>$ hexo publish draft “草稿文件名” </p></blockquote><h6 id="2-1fadfa"><a href="#2-1fadfa" class="headerlink" title="2.1fadfa"></a>2.1fadfa</h6><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>程序文档中的符号</p><blockquote><ol><li>[]：可选</li><li>{}：单选</li><li>&lt;&gt;：必选</li></ol></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
